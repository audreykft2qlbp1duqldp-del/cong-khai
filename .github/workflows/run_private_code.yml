name: Run Private Code (no source exposure)

on:
  workflow_dispatch:
    inputs:
      script:
        description: "Đường dẫn script trong repo RIÊNG TƯ (ví dụ: main.py hoặc src/main.py)"
        required: false
        default: "src/main.py"
      second_script:
        description: "Script thứ 2 (tùy chọn). Để trống nếu không dùng."
        required: false
        default: ""

jobs:
  run-private:
    runs-on: ubuntu-latest
    timeout-minutes: 420
    permissions:
      contents: read

    env:
      # Bắt buộc
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      # Tuỳ chọn nếu bạn dùng model/private trên HF
      # HUGGING_FACE_HUB_TOKEN: ${{ secrets.HF_TOKEN }}

      # Một số biến mặc định hữu ích cho main.py (có thể bỏ nếu không cần)
      COQUI_TOS_AGREED: "1"
      USE_GPU: "0"

    steps:
      # 1) (Tuỳ chọn) Checkout repo công khai (không bắt buộc nếu không cần file gì ở đây)
      - name: Checkout public repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 2) Checkout mã từ REPO RIÊNG TƯ bằng PAT (chỉ đọc)
      - name: Checkout private repo (read-only, no leak)
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO_SLUG }}   # ví dụ: your-org/your-private-repo
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}         # PAT có scope repo:read
          path: priv
          fetch-depth: 1
          persist-credentials: false

          # Nếu muốn chỉ lấy vài file để càng "kín" càng tốt, mở 2 dòng dưới và liệt kê chính xác:
          # sparse-checkout: |
          #   main.py
          #   requirements.txt

      # 3) Cài hệ thống: ffmpeg + font DejaVu Sans (phụ đề)
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg fonts-dejavu-core

      # 4) Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 5) Python deps (ưu tiên requirements.txt trong repo riêng tư; nếu không có thì fallback)
      - name: Install Python dependencies
      working-directory: priv
      shell: bash
      run: |
        set -euo pipefail
        python -m pip install --upgrade pip wheel

        # 1) Cài Torch (CPU) trước cho chắc, XTTS cần torch
        pip install --extra-index-url https://download.pytorch.org/whl/cpu "torch>=2.3,<2.6" "torchaudio>=2.3,<2.6"

        # 2) Nếu có requirements.txt thì cài trước
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

        # 3) ĐẢM BẢO có TTS (coqui-tts). Nếu thiếu thì cài bổ sung.
        if ! python -c "import TTS" >/dev/null 2>&1; then
          pip install --no-cache-dir "TTS>=0.22,<0.23" soundfile huggingface_hub google-genai numpy requests
        fi


      # 6) Chạy script chính trong repo RIÊNG TƯ
      - name: Run main script
        working-directory: priv
        shell: bash
        env:
          # mask secrets trong log
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          # HUGGING_FACE_HUB_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          set -euo pipefail
          # Không in nội dung file ra log → không lộ code
          python "${{ inputs.script }}"

      # 7) (Tùy chọn) Chạy script thứ 2 nếu bạn truyền vào
      - name: Run second script (optional)
        if: ${{ inputs.second_script != '' }}
        working-directory: priv
        shell: bash
        run: |
          set -euo pipefail
          if [ -f "${{ inputs.second_script }}" ]; then
            python "${{ inputs.second_script }}"
          else
            echo "[INFO] second_script không tồn tại → bỏ qua."
          fi

      # 8) Upload artifact đầu ra (không upload code)
      - name: Upload outputs (artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            priv/out/*.mp4
            priv/out/*.mp3
            priv/out/*.wav
            priv/out/story.srt
            priv/out/script.txt
          if-no-files-found: warn
          retention-days: 7
